logging.config=logging-config:classpath:log4j.properties
logging.file-web=app.log
logging.file-core=core.log
spring.aop.proxy-target-class=aop-proxy-target: false
spring.aop.auto=aop-auto:false
#-- 应用服务器配置
#-- 内嵌的WEB应用服务器监听端口
server.port=port:18080
server.port-core=port:38080
#-- 内嵌的WEB应用服务器监听地址
server.address=address:127.0.0.1
#-- 应用上下文路径
server.context-path=context-path:/ngkm
#-- 接收新连接的队列大小最大值
server.tomcat.accept-count=accept-count:10
#-- 并发处理的最大线程数
server.tomcat.max-threads=max-threads:100
#-- 同时并发处理的最大连接数
server.tomcat.max-connections=max-conns:100

#-- Dubbo相关配置----------------------begin---------------------------------------------------------------------------------------------
# dubbo 模式：provider 生产者
dubbo.mode.provider=provider
##Dubbo服务端监听端口
dubbo.provider.port=dubbo-port:20880
##dubbo生产者的应用标识
dubbo.provider.application-name=dubbo-appname:ngkm-provider
##dubbo生产者：默认的服务超时时间，单位：毫秒
dubbo.provider.timeout=dubbo-timeout:10000
dubbo.provider.registry-address=dubbo-zk:zookeeper://
dubbo.provider.annotation-package=dubbo-pkg:com.cmos.ngkm.service.impl
##dubbo 模式：consumer 消费者
dubbo.mode.consumer=consumer
##Dubbo服务注册与发现的zookeeper集群地址
dubbo.consumer.registry-address=dubbo-zk:zookeeper://
##dubbo消费者的应用标识
dubbo.consumer.application-name=dubbo-appname:ngkm-consumer
##dubbo消费者：对应的dubbo生产者服务地址
dubbo.consumer.reference-url=dubbo-ref:
##dubbo消息者：默认的服务访问超时时间，单位：毫秒
dubbo.consumer.timeout=dubbo-timeout:10000
dubbo.consumer.annotation-package=dubbo-pkg:com.cmos.ngkm.web

#-- 配置中心zookeeper server配置---------------begin------------------------------------------------------------------------------------------------------
##是否启用配置中心
cfg.enabled=cfg-enabled:false
##CORE层应用实例编码
cfg.instance.code-core=instanceid:ngkmcore
##WEB层应用实例编码
cfg.instance.code-web=instanceid:ngkm
##配置中心分配置系统标识
cfg.sysname=sysid:ngkm
##配置中心分配的应用标识
cfg.appname=appid:ngkm
##配置中心分配的应用标识
cfg.appname.core=appid:ngkmcore
##配置中心zookeeper集群服务地址
cfg.zk.servers=zk-servers:

#-- 消息中心配置-----------------------------begin---------------------------------------------------------------------------------------------------
##是否启用消息中心
msg.enabled=msg-enabeld:false
##消息中心broker集群
msg.brokers=brokers:192.168.100.145:9876;192.168.100.146:9876
##消息中心类型： rocketmq，支持：activemq, rocketmq, mqtt
msg.client-type=client-type:rocketmq

#-- 系统调用开关-----------------------------begin-------------------------------------------------------------------------------------------------------------
##控制调用全网知识库接口还是查询本系统数据库
sys.csf.config=true

#-- 默认数据源-----------------------------------------------------------------------------------------------------------------------------------------
db.default=base
##数据源配置
##数据源1
base.driverClassName=com.mysql.jdbc.Driver
base.url=jdbc:mysql://ngkm.db.cs.cmos:20005/ngkm?useUnicode=true&characterEncoding=utf8&maxRows=10000&allowMultiQueries=true
base.username=ngkm
base.password=rO0ABXciABBbd8uGtPgKvb0OJ/UpniXBBYBqpNjwGukqGaZkhuu08g==
base.initialSize=2

#-- 日志调试开关--------------------------begin（完备）------------------------------------------------------------------------------------------------------
logger.debug.enable-control=true
logger.debug.enable-core=true
##日志级别
logger.log.level-control=info
logger.log.level-core=info
##日志发送方式，部署在核心域和接口域使用kafka方式，互联网域使用file方式。
logger.msg.sender-control=kafka
logger.msg.sender-core=kafka
##kafka地址，根据部署环境进行选择配置
##洛阳测试kafka集群
logger.kafka.brokerlist=kafka1.log.core.cmos:9092,kafka2.log.core.cmos:9092,kafka3.log.core.cmos:9092
#日志中心获取用户id
logger.context.impl=com.cmos.ngkm.web.log.LogContextImpl
spring.app.initializers=inits:

#-- redis相关配置--------------------------begin-------------------------------------------------------------------------------------------------------
##最大空闲连接数, 默认8个
redis.MaxIdle=8
##最大连接数, 默认8个
redis.MaxTotal=60
##获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
redis.MaxWaitMillis=-1
##最小空闲连接数, 默认0
redis.MinIdle=0
##设置连接超时时间，单位是毫秒。
redis.ConnectionTimeout=2000
##会话超时时间，单位是毫秒。
redis.SoTimeout=3000
##最大节点调转次数，默认是8次，经过试验建议设置为12。
redis.MaxRedirections=12
##缓存切面键值的生存时间，单位是秒（该配置指，所有缓存在一小时后会自动删除，不适用于当前业务场景！）
#redis.LiveTime=3600
##Redis缓存中间件配置地址，集群多台服务器地址通过逗号进行分隔
redis.redisAddress=redis1.ngkm.cs.core.cmos:20023,redis2.ngkm.cs.core.cmos:20023,redis3.ngkm.cs.core.cmos:20023,redis4.ngkm.cs.core.cmos:20023,redis5.ngkm.cs.core.cmos:20023,redis6.ngkm.cs.core.cmos:20023


#-- 单点登录配置-----------------begin-----------------------------------------------------------------------------------------------------------------
##当前服务应用名
security.serverName=ngkm
##接入应用id
security.clientId=1503022322636
##接入应用密码
security.clientSecret=268923405514e662
##获取code
security.oauthUrl=http://ngmtt.cs.cmos/ngmtt/front/sh/oauth!authorize
##获取accessToken
security.accessTokenUrl=http://ngmtt.cs.cmos/ngmtt/front/sh/oauth!accesstoken
##获取登陆用户及租户id
security.ssoServerUrl=http://ngmtt.cs.cmos/ngmtt/front/sh/resources!sso
##编码
security.characterEncoding=UTF-8
##是否开启https验证
security.isHttpsServer=false

#-- ONEST配置----------------------begin-------------------------------------------------------------------------------------------------------------
ONEST_ENDPOINT=http://onest.glb.cmos:80
UID=ngkm
DISPLAY_NAME=ngzsk
ONEST_ACCESS_KEY=G205WYY0HG53DZGLPJWX
ONEST_SECRET_KEY=MDMEf63GEc9OVJtqq6SSmaVWsh7e3k3fzLxwo6RE
bucketName=prd-ngkm
#本系统上传广告的模块路径
ADVERT_KEY=advert/
#本系统允许上传的文件类型
ONEST_FILETYPES=jpg,png

#-- 接入CSF配置-------------------begin--------------------------------------------------------------------------------------------------------------
##客户端集群策略（重试策略）：重试N次,括号中为0或负数不重试
csf.retry.policy=RetryNTimes(0)
##客户端获取服务信息的方式
##从服务路由器获取配置为com.cmos.csf.client.service.info.fetcher.FetchServiceInfoFromServiceRouter
##直连配置com.cmos.csf.client.service.info.fetcher.FetchDirectServiceInfo
csf.client.serviceinfo.fetcher=com.cmos.csf.client.service.info.fetcher.FetchServiceInfoFromServiceRouter
##客户端扩展，可以扩展是否携带用户信息、渠道号、流水等等 配置为IClientExtend的实现类
csf.client.extend=com.cmos.csf.client.service.extend.DefaultClientExtend
##日志埋点信息扩展，客户端log4x埋点扩展，可以不配置
csf.client.log.collection.extend=com.cmos.csf.client.service.log.DefaultClientCollectionExtend
##系统编码
csf.integrated.centers=ngkm
##zk地址配置
zk.server.list=zk1.csf.core.cmos:10111,zk2.csf.core.cmos:10112,zk3.csf.core.cmos:10111
##临时文件上传目录
file.local.path=/tmp/ngkm/file

#调用shiro路径判断
shiro.flag=sso

# 按钮权限控制变量（开发：develop;测试：test；生产：product）
system.env.mo=product
